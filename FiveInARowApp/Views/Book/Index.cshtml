@model IEnumerable<FiveInARowApp.Models.Book>

@{
    ViewBag.Title = "Index";
}

<h2>Listing Page</h2>

@using (Html.BeginForm())
{
    <div id="FilterSearch" class="form-horizontal">
        <div class="form-group">
            @Html.Label("Search by Title", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextBox("searchCriteria", null, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.Label("Filter by Author", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("authorFilter", new SelectList(ViewBag.Authors), "All Authors", new { @class = "form-control" })
        </div>
        <div class="form-group">
            <input type="submit" value="Find Book" class="btn col-md-2 col-md-offset-2" />
            <input type="button" value="Reset Book List" onclick="location.href='@Url.Action("Index", "Book")'" class="btn col-md-2 col-md-offset-2" />
        </div>
    </div>
}


<p>
    <div class="form-group">
        <input type="button" value="Create New" onclick="location.href='@Url.Action("Create", "Book")'" class="btn" />
    </div>
</p>
<table class="table">
    <tr>

        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Title).ToHtmlString(), "Index", new { sortOrder = "Title" })
        </th>
        <th>
            @Html.ActionLink(@Html.DisplayNameFor(model => model.Author).ToHtmlString(), "Index", new { sortOrder = "Author" })
        </th>

        <th>
            @Html.DisplayNameFor(model => model.Summary)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Topics)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Summary)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Topics)
            </td>
            <td>
               
                    <input type="button" value="Details" class="btn btn-default" onclick="location.href='@Url.Action("Details", "Book", new { id= item.Id})'" />
                    <input type="button" value="Edit" class="btn btn-default" onclick="location.href='@Url.Action("Edit", "Book", new { id = item.Id })'" />
                    <input type="button" value="Delete" class="btn btn-danger" onclick="location.href='@Url.Action("Delete", "Book", new { id = item.Id })'" />
            
            </td>
        </tr>
    }

</table>


@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";

    // Cast the model as a Paged List to access pagination properties
    var pagedList = (IPagedList)Model;
}

Page @(pagedList.PageCount < pagedList.PageNumber ? 0 : pagedList.PageNumber) of @pagedList.PageCount
@Html.PagedListPager(pagedList, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
